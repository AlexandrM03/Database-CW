-- spatial tables --
create table boundaries
(
    id       number generated by default as identity,
    name     varchar(50),
    boundary sdo_geometry,
    constraint boundaries_pk primary key (id)
);

create table cities
(
    id    number generated by default as identity,
    name  varchar(50),
    point sdo_geometry,
    constraint cities_pk primary key (id)
);

create table roads
(
    id   number generated by default as identity,
    line sdo_geometry,
    constraint roads_pk primary key (id)
);

-- metadata --
insert into user_sdo_geom_metadata(table_name, column_name, diminfo, srid)
values ('boundaries', 'boundary', mdsys.sdo_dim_array(mdsys.sdo_dim_element('X', -180, 180, 0.005),
                                                      mdsys.sdo_dim_element('Y', -90, 90, 0.005)),
        4326);

insert into user_sdo_geom_metadata(table_name, column_name, diminfo, srid)
values ('cities', 'point', mdsys.sdo_dim_array(mdsys.sdo_dim_element('X', -180, 180, 0.005),
                                               mdsys.sdo_dim_element('Y', -90, 90, 0.005)),
        4326);

insert into user_sdo_geom_metadata(table_name, column_name, diminfo, srid)
values ('roads', 'line', mdsys.sdo_dim_array(mdsys.sdo_dim_element('X', -180, 180, 0.005),
                                             mdsys.sdo_dim_element('Y', -90, 90, 0.005)),
        4326);

commit;

select *
from user_sdo_geom_metadata;

-- tables --
create table user_roles
(
    id   number generated by default as identity,
    name varchar2(10),
    constraint user_roles_pk primary key (id)
);

insert into user_roles(name) values ('admin');
insert into user_roles(name) values ('user');
commit;

create table users
(
    id            number generated by default as identity,
    username      varchar2(50) unique,
    password_hash varchar2(300) not null,
    first_name    varchar2(30),
    last_name     varchar2(30),
    telephone     varchar2(30),
    user_role_id  number,
    constraint users_pk primary key (id),
    constraint users_user_roles_fk foreign key (user_role_id) references user_roles (id)
);

create table drivers
(
    id            number generated by default as identity,
    username      varchar2(50) unique,
    password_hash varchar2(300) not null,
    first_name    varchar2(30),
    last_name     varchar2(30),
    telephone     varchar2(30),
    rating        number(3, 1),
    constraint drivers_pk primary key (id)
);

create table drivers_ratings
(
    id        number generated by default as identity,
    driver_id number,
    rating    number,
    constraint drivers_ratings_pk primary key (id),
    constraint drivers_ratings_drivers_fk foreign key (driver_id) references drivers (id)
);

create table order_statuses
(
    id     number generated by default as identity,
    status varchar2(20),
    constraint order_statuses_pk primary key (id)
);

insert into order_statuses(status) values ('pending');
insert into order_statuses(status) values ('accepted');
insert into order_statuses(status) values ('in_progress');
insert into order_statuses(status) values ('completed');
commit;

create table orders
(
    id              number generated by default as identity,
    user_id         number,
    driver_id       number,
    order_status_id number,
    start_point     varchar(50) not null,
    end_point       varchar(50) not null,
    price           number(10, 2),
    constraint orders_pk primary key (id),
    constraint orders_users_fk foreign key (user_id) references users (id),
    constraint orders_drivers_fk foreign key (driver_id) references drivers (id),
    constraint orders_order_statuses_fk foreign key (order_status_id) references order_statuses (id)
);

create table order_items
(
    id          number generated by default as identity,
    order_id    number,
    item_name   varchar2(50) not null,
    item_weight number not null,
    item_volume number not null,
    constraint order_items_pk primary key (id),
    constraint order_items_orders_fk foreign key (order_id) references orders (id)
);